CALL OBSERVABILITY_SETUP.SETUP_PROCEDURES_V1.CHILD_ROLE_CREATION();
CREATE OR REPLACE PROCEDURE OBSERVABILITY_SETUP.SETUP_PROCEDURES_V1.CHILD_ROLE_CREATION()
      RETURNS STRING
      LANGUAGE JAVASCRIPT
      EXECUTE AS CALLER
    AS
    $$

      var version_schema = "SETUP_PROCEDURES_V1";
      var costing_db_name = "KH_SNOWFLAKE_COSTING";

      var account_query = "SELECT CURRENT_ACCOUNT()";
      var statement = snowflake.createStatement({sqlText: account_query});
      var account = statement.execute()
      account.next();
      account_name = account.getColumnValue(1);

      var query_user = "SELECT CURRENT_USER()";
      var statement0 = snowflake.createStatement({sqlText: query_user});
      var user = statement0.execute()
      user.next();
      username = user.getColumnValue(1);

      var sql_query = `
      BEGIN
      ---- CREATE OBSERVABILITY_ADMIN ROLE
      -- CREATE THE ROLE AND CORRESPONDING WAREHOUSE TO BE USED
      CREATE ROLE IF NOT EXISTS OBSERVABILITY_ADMIN;
      CREATE WAREHOUSE IF NOT EXISTS OBSERVABILITY_WH WITH WAREHOUSE_SIZE = XSMALL;
      GRANT USAGE ON WAREHOUSE OBSERVABILITY_WH TO ROLE OBSERVABILITY_ADMIN;

      -- GRANT ROLE TO ALL PARENT ROLES WHO MAY NEED TO SEE OUTPUTS OF OBSERVABILITY OBJECTS, WE WILL NEED THIS FROM DINESH
      GRANT ROLE OBSERVABILITY_ADMIN TO USER ` + username + `;
      GRANT ROLE OBSERVABILITY_ADMIN TO ROLE SYSADMIN;
      GRANT ROLE OBSERVABILITY_ADMIN TO ROLE ACCOUNTADMIN;

      -- GRANT USAGE ON ALL OBJECTS BEING SHARED
      GRANT USAGE ON DATABASE OBSERVABILITY_MAINTENANCE TO ROLE OBSERVABILITY_ADMIN;
      GRANT USAGE ON SCHEMA OBSERVABILITY_MAINTENANCE.LOGGING_SCHEMA TO ROLE OBSERVABILITY_ADMIN;
      GRANT SELECT, INSERT ON TABLE OBSERVABILITY_MAINTENANCE.LOGGING_SCHEMA.LOGGING_TABLE TO ROLE OBSERVABILITY_ADMIN;
      GRANT USAGE ON DATABASE OBSERVABILITY_SETUP TO ROLE OBSERVABILITY_ADMIN;
      GRANT USAGE ON SCHEMA OBSERVABILITY_SETUP.${version_schema} TO ROLE OBSERVABILITY_ADMIN;
      GRANT USAGE ON SCHEMA OBSERVABILITY_SETUP.VERSION_CONFIG TO ROLE OBSERVABILITY_ADMIN;
      GRANT SELECT, INSERT ON TABLE OBSERVABILITY_SETUP.VERSION_CONFIG.VERSION_BY_ACCOUNT TO OBSERVABILITY_ADMIN;
      GRANT USAGE ON ALL PROCEDURES IN SCHEMA OBSERVABILITY_SETUP.${version_schema} TO ROLE OBSERVABILITY_ADMIN;
      GRANT USAGE ON FUTURE PROCEDURES IN SCHEMA OBSERVABILITY_SETUP.${version_schema} TO ROLE OBSERVABILITY_ADMIN;


      -- GRANT THE ABILITY TO CREATE ALL REQUIRED OBJECTS (DBS, SCHEMAS, TABLES, TASKS, ALERTS AND NOTIFICATIONS)
      GRANT CREATE DATABASE ON ACCOUNT TO ROLE OBSERVABILITY_ADMIN;
      GRANT CREATE REPLICATION GROUP ON ACCOUNT TO ROLE OBSERVABILITY_ADMIN;
      GRANT EXECUTE MANAGED TASK, EXECUTE TASK ON ACCOUNT TO ROLE OBSERVABILITY_ADMIN;
      GRANT CREATE INTEGRATION ON ACCOUNT TO ROLE OBSERVABILITY_ADMIN;
      GRANT EXECUTE ALERT ON ACCOUNT TO ROLE OBSERVABILITY_ADMIN;
      GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE OBSERVABILITY_ADMIN;

      ---- CREATE OBSERVABILITY_ADMIN ROLE

      INSERT INTO OBSERVABILITY_MAINTENANCE.LOGGING_SCHEMA.LOGGING_TABLE
      VALUES ('CHILD_ROLE_CREATION','SUCCESS', CURRENT_TIMESTAMP(), '`+account_name+`');
      RETURN 'SUCCESS';
      EXCEPTION
          WHEN statement_error THEN
          LET ERROR_MESSAGE := CURRENT_TIMESTAMP()||SQLCODE || ': '||SQLERRM;
          INSERT INTO observability_maintenance.logging_schema.logging_table
          VALUES('child_role_creation','FAILED', :ERROR_MESSAGE ,'`+account_name+`');
          USE ROLE ACCOUNTADMIN;
          USE WAREHOUSE COMPUTE_WH;
          RETURN OBJECT_CONSTRUCT('ERROR TYPE','STATEMENT_ERROR',
                                      'SQLCODE', sqlcode,
                                      'SQLERRM' , sqlerrm,
                                      'SQLSTATE', sqlstate);
      
      END`;
  var statement1 = snowflake.createStatement({sqlText: sql_query});
  var result = statement1.execute();
  $$;